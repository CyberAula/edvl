{
  "paragraphs": [
    {
      "text": "import org.apache.spark._\nimport org.apache.spark.sql._\nimport com.mongodb.spark._\nimport com.mongodb.spark.config._\nimport com.mongodb.spark.sql._\n\nval spark = SparkSession.builder()\n  .master(\"local\")\n  .appName(\"MongoSparkConnectorIntro\")\n  .config(\"spark.mongodb.input.uri\", \"mongodb://mongo:27017/sth_test.sth_x002f\")\n  .config(\"spark.mongodb.output.uri\", \"mongodb://mongo:27017/sth_test.sth_x002f\")\n  .getOrCreate()\nval sc = spark.sparkContext\nval readConfig = ReadConfig(Map(\"uri\" -> \"mongodb://root:example@mongo:27017/\", \"database\" -> \"sth_test\", \"collection\" -> \"sth_x002f\", \"sampleSize\" -> \"100000\")) // 1)\n\nval customRdd = MongoSpark.load(sc, readConfig)\nprintln(customRdd.count)\nprintln(customRdd.first.toJson)",
      "user": "anonymous",
      "dateUpdated": "2021-03-01T08:51:38+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "210\n{\"_id\": {\"$oid\": \"603ca5612ab79c003f4b9aa2\"}, \"recvTime\": {\"$date\": 1614587233400}, \"entityId\": \"Room1\", \"entityType\": \"Room\", \"attrName\": \"temperature\", \"attrType\": \"Float\", \"attrValue\": \"23\", \"attrMetadata\": []}\nimport com.mongodb.spark.sql._\n\u001b[1m\u001b[34mspark\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.SparkSession\u001b[0m = org.apache.spark.sql.SparkSession@569d8076\n\u001b[1m\u001b[34msc\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.SparkContext\u001b[0m = org.apache.spark.SparkContext@116a93f7\n\u001b[1m\u001b[34mreadConfig\u001b[0m: \u001b[1m\u001b[32mcom.mongodb.spark.config.ReadConfig.Self\u001b[0m = ReadConfig(sth_test,sth_x002f,Some(mongodb://root:example@mongo:27017/),100000,DefaultMongoPartitioner,Map(),15,ReadPreferenceConfig(primary,None),ReadConcernConfig(None),AggregationConfig(None,None,None,true),false,true,250,true,true,10000,None)\n\u001b[1m\u001b[34mcustomRdd\u001b[0m: \u001b[1m\u001b[32mcom.mongodb.spark.rdd.MongoRDD[org.bson.Document]\u001b[0m = MongoRDD[27] at RDD at MongoRDD.scala:51\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=9",
              "$$hashKey": "object:12797"
            },
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=10",
              "$$hashKey": "object:12798"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614588139619_288149710",
      "id": "paragraph_1612459225408_42458394",
      "dateCreated": "2021-03-01T08:42:19+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:10706",
      "dateFinished": "2021-03-01T08:51:37+0000",
      "dateStarted": "2021-03-01T08:51:36+0000"
    },
    {
      "text": "val highTemp = customRdd.filter(doc => doc.get(\"attrName\").toString == \"temperature\").filter(doc => doc.get(\"attrValue\").toString.toDouble > 50)\nhighTemp.count\n",
      "user": "anonymous",
      "dateUpdated": "2021-03-01T08:51:05+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mhighTemp\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[org.bson.Document]\u001b[0m = MapPartitionsRDD[2] at filter at <console>:40\n\u001b[1m\u001b[34mres23\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 8\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=2",
              "$$hashKey": "object:12084"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614588139620_2025614381",
      "id": "paragraph_1612459479391_1595539207",
      "dateCreated": "2021-03-01T08:42:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:10707",
      "dateFinished": "2021-03-01T08:51:08+0000",
      "dateStarted": "2021-03-01T08:51:05+0000"
    },
    {
      "text": "%angular\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\n<script type=\"text/javascript\">\n \n    var ctx = document.getElementById('myChart').getContext('2d');\n    var chart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: [],\n            datasets: [{\n                label: 'Room Temperature',\n                backgroundColor: 'rgba(30, 168, 150, .5)',\n                borderColor: 'rgb(30, 168, 150)',\n                data: []\n            }]\n        },\n        options: {}\n    });\n  \n    var element = $('#someId');\n    var scope = angular.element(element.parent('.ng-scope')).scope().compiledScope;\n    scope.data = []\n    window.watcher = scope.$watch('newTemp', (newVal, oldVal) => {\n        scope.data.push(newVal)\n        chart.data.labels.push(new Date().getTime());\n        chart.data.datasets.forEach((dataset) => {\n            dataset.data.push(newVal);\n        });\n        chart.update();\n    });\n</script>\n<div id=\"someId\" style=\"display:none;\">\n    <span ng-repeat=\"ditem in data track by $index\">{{ditem}}-</span>\n</div>\n<canvas id=\"myChart\" style=\"width: 500px; height: 200px;\"></canvas>",
      "user": "anonymous",
      "dateUpdated": "2021-03-01T08:51:09+0000",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/text",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\n<script type=\"text/javascript\">\n \n    var ctx = document.getElementById('myChart').getContext('2d');\n    var chart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: [],\n            datasets: [{\n                label: 'Room Temperature',\n                backgroundColor: 'rgba(30, 168, 150, .5)',\n                borderColor: 'rgb(30, 168, 150)',\n                data: []\n            }]\n        },\n        options: {}\n    });\n  \n    var element = $('#someId');\n    var scope = angular.element(element.parent('.ng-scope')).scope().compiledScope;\n    scope.data = []\n    window.watcher = scope.$watch('newTemp', (newVal, oldVal) => {\n        scope.data.push(newVal)\n        chart.data.labels.push(new Date().getTime());\n        chart.data.datasets.forEach((dataset) => {\n            dataset.data.push(newVal);\n        });\n        chart.update();\n    });\n</script>\n<div id=\"someId\" style=\"display:none;\">\n    <span ng-repeat=\"ditem in data track by $index\">{{ditem}}-</span>\n</div>\n<canvas id=\"myChart\" style=\"width: 500px; height: 200px;\"></canvas>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614588139620_570215780",
      "id": "paragraph_1612460482863_929711274",
      "dateCreated": "2021-03-01T08:42:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:10708",
      "dateFinished": "2021-03-01T08:51:09+0000",
      "dateStarted": "2021-03-01T08:51:09+0000"
    },
    {
      "text": "customRdd.toDF().show()\n",
      "user": "anonymous",
      "dateUpdated": "2021-03-01T08:51:14+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+-----------+--------+---------+--------+----------+--------------------+\n|                 _id|   attrName|attrType|attrValue|entityId|entityType|            recvTime|\n+--------------------+-----------+--------+---------+--------+----------+--------------------+\n|[603ca5612ab79c00...|temperature|   Float|       23|   Room1|      Room|2021-03-01 08:27:...|\n|[603ca5612ab79c00...|   pressure| Integer|      720|   Room1|      Room|2021-03-01 08:27:...|\n|[603ca9122ab79c00...|temperature|   Float|       19|   Room1|      Room|2021-03-01 08:42:...|\n|[603ca9122ab79c00...|   pressure|   Float|      616|   Room1|      Room|2021-03-01 08:42:...|\n|[603ca9172ab79c00...|temperature|   Float|       25|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9172ab79c00...|   pressure|   Float|     2262|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca91c2ab79c00...|temperature|   Float|       30|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca91c2ab79c00...|   pressure|   Float|     1777|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9212ab79c00...|temperature|   Float|       31|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9212ab79c00...|   pressure|   Float|      622|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9262ab79c00...|temperature|   Float|       40|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9262ab79c00...|   pressure|   Float|      385|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca92c2ab79c00...|temperature|   Float|       25|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca92c2ab79c00...|   pressure|   Float|     2112|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9312ab79c00...|temperature|   Float|       45|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9312ab79c00...|   pressure|   Float|     2754|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9362ab79c00...|temperature|   Float|       48|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca9362ab79c00...|   pressure|   Float|     2519|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca93b2ab79c00...|temperature|   Float|       24|   Room1|      Room|2021-03-01 08:43:...|\n|[603ca93b2ab79c00...|   pressure|   Float|     2678|   Room1|      Room|2021-03-01 08:43:...|\n+--------------------+-----------+--------+---------+--------+----------+--------------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=3",
              "$$hashKey": "object:12176"
            },
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=4",
              "$$hashKey": "object:12177"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614588139620_698343472",
      "id": "paragraph_1612460567660_1783161529",
      "dateCreated": "2021-03-01T08:42:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:10709",
      "dateFinished": "2021-03-01T08:51:18+0000",
      "dateStarted": "2021-03-01T08:51:14+0000"
    },
    {
      "text": "customRdd.toDF().collect.filter(a=>a(1)==\"temperature\").foreach(doc=>{\n     z.angularBind(\"newTemp\", doc(3)) \n})\n",
      "user": "anonymous",
      "dateUpdated": "2021-03-01T08:51:17+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=5",
              "$$hashKey": "object:12611"
            },
            {
              "jobUrl": "http://574b9c1d8b6f:4040/jobs/job?id=6",
              "$$hashKey": "object:12612"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614588139620_729529017",
      "id": "paragraph_1612460599936_1097561842",
      "dateCreated": "2021-03-01T08:42:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:10710",
      "dateFinished": "2021-03-01T08:51:20+0000",
      "dateStarted": "2021-03-01T08:51:17+0000"
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2021-03-01T08:42:19+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614588139620_1511120832",
      "id": "paragraph_1612460611433_1079388946",
      "dateCreated": "2021-03-01T08:42:19+0000",
      "status": "READY",
      "$$hashKey": "object:10711"
    }
  ],
  "name": "ExampleMongo",
  "id": "2FXZFAMZ5",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/ExampleMongo"
}